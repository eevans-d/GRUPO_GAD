name: Security Audit

on:
  # Cron semanal (lunes a medianoche UTC)
  schedule:
    - cron: '0 0 * * 1'
  # En push a main/master
  push:
    branches:
      - main
      - master
  # En pull requests
  pull_request:
    branches:
      - main
      - master
  # Permitir ejecución manual
  workflow_dispatch:

jobs:
  pip-audit:
    name: Python Dependency Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit
      
      - name: Run pip-audit
        id: audit
        continue-on-error: true
        run: |
          pip-audit --format json --output pip-audit-report.json || true
          pip-audit --format markdown --output pip-audit-report.md || true
      
      - name: Parse audit results
        id: parse
        run: |
          if [ -f pip-audit-report.json ]; then
            # Contar vulnerabilidades críticas y altas
            CRITICAL=$(jq '[.vulnerabilities[] | select(.severity == "CRITICAL")] | length' pip-audit-report.json || echo 0)
            HIGH=$(jq '[.vulnerabilities[] | select(.severity == "HIGH")] | length' pip-audit-report.json || echo 0)
            
            echo "critical=$CRITICAL" >> $GITHUB_OUTPUT
            echo "high=$HIGH" >> $GITHUB_OUTPUT
            
            echo "### Pip Audit Results" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- **Critical**: $CRITICAL" >> $GITHUB_STEP_SUMMARY
            echo "- **High**: $HIGH" >> $GITHUB_STEP_SUMMARY
            
            # Mostrar el reporte si existe
            if [ -f pip-audit-report.md ]; then
              cat pip-audit-report.md >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "No audit report generated" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Upload audit reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pip-audit-reports
          path: |
            pip-audit-report.json
            pip-audit-report.md
          retention-days: 30
      
      - name: Fail on critical vulnerabilities
        if: steps.parse.outputs.critical > 0
        run: |
          echo "❌ Found ${{ steps.parse.outputs.critical }} critical vulnerabilities!"
          exit 1
  
  semgrep:
    name: Semgrep Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/python
            p/ci
        continue-on-error: true
      
      - name: Upload Semgrep results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: semgrep-results
          path: semgrep-results.json
          retention-days: 30
  
  secrets-scan:
    name: Secrets Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para escanear todo el historial
      
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --only-verified
      
      - name: Upload secrets scan results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: secrets-scan-results
          path: trufflehog-results.json
          retention-days: 30
  
  create-issue-on-failure:
    name: Create Issue on Critical Findings
    runs-on: ubuntu-latest
    needs: [pip-audit, semgrep, secrets-scan]
    if: failure() && github.event_name == 'schedule'
    
    steps:
      - name: Create Issue
        uses: actions/github-script@v7
        with:
          script: |
            const title = '🔴 Security Audit Failed - Critical Vulnerabilities Found';
            const body = `
            ## Security Audit Results
            
            The automated security audit has detected critical issues that require immediate attention.
            
            **Workflow Run**: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ### Actions Required:
            - Review the audit reports in the workflow artifacts
            - Address critical and high severity vulnerabilities
            - Re-run the security audit after fixes
            
            ### Reports Available:
            - Pip Audit Report
            - Semgrep Security Scan
            - Secrets Scanning Results
            
            cc: @${{ github.repository_owner }}
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'critical', 'automated']
            });
  
  comment-on-pr:
    name: Comment PR with Security Summary
    runs-on: ubuntu-latest
    needs: [pip-audit, semgrep]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Download audit reports
        uses: actions/download-artifact@v4
        with:
          name: pip-audit-reports
          path: ./reports
      
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## 🔒 Security Audit Summary\n\n';
            
            // Leer reporte de pip-audit si existe
            try {
              const auditReport = fs.readFileSync('./reports/pip-audit-report.md', 'utf8');
              comment += '### Pip Audit\n\n' + auditReport + '\n\n';
            } catch (e) {
              comment += '### Pip Audit\n\n✅ No vulnerabilities found\n\n';
            }
            
            comment += '**Full reports available in workflow artifacts**\n';
            comment += `[View Full Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
