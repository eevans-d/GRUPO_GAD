"""migraciÃ³n limpia sin schema gad para SQLite

Revision ID: e062d9a5b51f
Revises: 
Create Date: 2025-09-11 04:16:28.074243

"""
from typing import Sequence, Union


from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from src.api.models.base import CustomJsonB, CustomArray

# revision identifiers, used by Alembic.
revision: str = 'e062d9a5b51f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('metricas_tareas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo_tarea', postgresql.ENUM('PATRULLAJE', 'INVESTIGACION', 'VIGILANCIA', 'INTERVENCION', 'ADMINISTRATIVA', 'ENTRENAMIENTO', name='tipo_tarea'), nullable=False),
    sa.Column('prioridad', postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'URGENT', 'CRITICAL', name='prioridad_tarea'), nullable=False),
    sa.Column('total_tareas', sa.Integer(), nullable=False),
    sa.Column('total_horas', sa.REAL(), nullable=False),
    sa.Column('tiempo_promedio_horas', sa.REAL(), nullable=True),
    sa.Column('tasa_exito', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('duracion_p25', sa.REAL(), nullable=True),
    sa.Column('duracion_p50', sa.REAL(), nullable=True),
    sa.Column('duracion_p75', sa.REAL(), nullable=True),
    sa.Column('duracion_min', sa.REAL(), nullable=True),
    sa.Column('duracion_max', sa.REAL(), nullable=True),
    sa.Column('ultima_actualizacion', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('dni', sa.String(length=20), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('apellido', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('telefono', sa.String(length=20), nullable=True),
    sa.Column('telegram_id', sa.BigInteger(), nullable=True),
    sa.Column('nivel', postgresql.ENUM('LEVEL_1', 'LEVEL_2', 'LEVEL_3', name='nivel_usuario'), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('verificado', sa.Boolean(), nullable=False),
    sa.Column('ultimo_acceso', sa.DateTime(timezone=True), nullable=True),
    sa.Column('intentos_fallidos', sa.Integer(), nullable=False),
    sa.Column('bloqueado_hasta', sa.DateTime(timezone=True), nullable=True),
    sa.Column('extra_data', CustomJsonB(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dni'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('telegram_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('efectivos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('codigo_interno', sa.String(length=50), nullable=False),
    sa.Column('rango', sa.String(length=50), nullable=True),
    sa.Column('unidad', sa.String(length=100), nullable=True),
    sa.Column('especialidad', sa.String(length=100), nullable=True),
    sa.Column('estado_disponibilidad', postgresql.ENUM('DISPONIBLE', 'EN_TAREA', 'FUERA_SERVICIO', 'NO_DISPONIBLE', name='estado_disponibilidad'), nullable=False),
    sa.Column('ultima_actualizacion_estado', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('usuario_id')
    )
    op.create_index(op.f('ix_efectivos_codigo_interno'), 'efectivos', ['codigo_interno'], unique=True)
    op.create_index(op.f('ix_efectivos_estado_disponibilidad'), 'efectivos', ['estado_disponibilidad'], unique=False)
    op.create_index(op.f('ix_efectivos_id'), 'efectivos', ['id'], unique=False)
    op.create_index(op.f('ix_efectivos_uuid'), 'efectivos', ['uuid'], unique=True)
    op.create_table('tareas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('codigo', sa.String(length=50), nullable=False),
    sa.Column('titulo', sa.String(length=200), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('tipo', postgresql.ENUM('PATRULLAJE', 'INVESTIGACION', 'VIGILANCIA', 'INTERVENCION', 'ADMINISTRATIVA', 'ENTRENAMIENTO', name='tipo_tarea'), nullable=False),
    sa.Column('prioridad', postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'URGENT', 'CRITICAL', name='prioridad_tarea'), nullable=False),
    sa.Column('inicio_programado', sa.DateTime(timezone=True), nullable=False),
    sa.Column('fin_programado', sa.DateTime(timezone=True), nullable=True),
    sa.Column('inicio_real', sa.DateTime(timezone=True), nullable=True),
    sa.Column('fin_real', sa.DateTime(timezone=True), nullable=True),
    sa.Column('tiempo_pausado', sa.Interval(), nullable=True),
    sa.Column('pausado_en', sa.DateTime(timezone=True), nullable=True),
    sa.Column('estado', postgresql.ENUM('PROGRAMMED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'PAUSED', name='estado_tarea'), nullable=False),
    sa.Column('delegado_usuario_id', sa.Integer(), nullable=False),
    sa.Column('creado_por_usuario_id', sa.Integer(), nullable=False),
    sa.Column('ubicacion_lat', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('ubicacion_lon', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('ubicacion_descripcion', sa.Text(), nullable=True),
    sa.Column('efectivos_asignados', CustomArray(), nullable=False),
    sa.Column('duracion_real_horas', sa.Numeric(), nullable=True),
    sa.Column('notas', CustomJsonB(), nullable=False),
    sa.Column('extra_data', CustomJsonB(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('(inicio_real IS NULL AND fin_real IS NULL) OR (inicio_real IS NOT NULL AND fin_real IS NULL) OR (inicio_real IS NOT NULL AND fin_real IS NOT NULL AND fin_real >= inicio_real)', name='chk_tareas_fechas_reales'),
    sa.CheckConstraint('fin_programado IS NULL OR fin_programado > inicio_programado', name='chk_tareas_fechas'),
    sa.ForeignKeyConstraint(['creado_por_usuario_id'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['delegado_usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('codigo'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('historial_estados',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tarea_id', sa.Integer(), nullable=False),
    sa.Column('estado_anterior', postgresql.ENUM('PROGRAMMED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'PAUSED', name='estado_tarea'), nullable=True),
    sa.Column('estado_nuevo', postgresql.ENUM('PROGRAMMED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'PAUSED', name='estado_tarea'), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('motivo', sa.Text(), nullable=True),
    sa.Column('extra_data', CustomJsonB(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tarea_id'], ['tareas.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tarea_efectivos',
    sa.Column('tarea_id', sa.Integer(), nullable=False),
    sa.Column('efectivo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['efectivo_id'], ['efectivos.id'], ),
    sa.ForeignKeyConstraint(['tarea_id'], ['tareas.id'], ),
    sa.PrimaryKeyConstraint('tarea_id', 'efectivo_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tarea_efectivos')
    op.drop_table('historial_estados')
    op.drop_table('tareas')
    op.drop_index(op.f('ix_efectivos_uuid'), table_name='efectivos')
    op.drop_index(op.f('ix_efectivos_id'), table_name='efectivos')
    op.drop_index(op.f('ix_efectivos_estado_disponibilidad'), table_name='efectivos')
    op.drop_index(op.f('ix_efectivos_codigo_interno'), table_name='efectivos')
    op.drop_table('efectivos')
    op.drop_table('usuarios')
    op.drop_table('metricas_tareas')
    # ### end Alembic commands ###
