version: '3.9'

services:
  db:
    ports:
      # No exponer el puerto de la BD a la red host en producción
      # La comunicación es a través de la red interna de Docker.
      - "127.0.0.1:5432:5432"
    restart: always

  redis:
    image: redis:7-alpine
    container_name: grupo_gad_redis
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis-data:/data
    ports:
      - "127.0.0.1:6379:6379"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    image: ghcr.io/eevans-d/grupo_gad/api:v1.0.0
    volumes: [] # Eliminar los montajes de volumen para usar el código dentro de la imagen
    ports:
      # No exponer el puerto de la API directamente; Caddy es el punto de entrada
      - "127.0.0.1:8000:8000"
    env_file:
      - .env.production
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  bot:
    volumes: [] # Eliminar montajes de volumen
    env_file:
      - .env.production
    restart: always

  caddy:
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    restart: always

volumes:
  redis-data:
