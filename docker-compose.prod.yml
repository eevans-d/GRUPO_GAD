version: "3.9"

services:
  db:
    image: postgis/postgis:15-3.4-alpine
    container_name: grupo_gad_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data/
      - ./docker/init_postgis.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always
    networks:
      - gad-network

  redis:
    image: redis:7-alpine
    container_name: grupo_gad_redis
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis-data:/data
    ports:
      - "127.0.0.1:6379:6379"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - gad-network

  api:
    image: ghcr.io/eevans-d/grupo_gad/api:v1.0.0
    container_name: grupo_gad_api
    volumes: []
    ports:
      - "127.0.0.1:8000:8000"
    env_file:
      - .env.production
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      - db
      - redis
    networks:
      - gad-network

  bot:
    image: ghcr.io/eevans-d/grupo_gad/bot:v1.0.0
    container_name: grupo_gad_bot
    volumes: []
    env_file:
      - .env.production
    restart: always
    depends_on:
      - api
    networks:
      - gad-network

  caddy:
    image: caddy:2.8
    container_name: grupo_gad_caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    restart: always
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - api
    networks:
      - gad-network

networks:
  gad-network:
    driver: bridge

volumes:
  db-data:
  redis-data:
  caddy_data:
  caddy_config:
