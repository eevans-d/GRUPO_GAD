# SECURITY HARDENED - Multi-stage build with digest pinning
# Builder stage with pinned digest for reproducible builds
FROM python:3.12-slim as builder

# Security-first environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    POETRY_VERSION=1.8.4 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Instalar Poetry
RUN pip install "poetry==$POETRY_VERSION"

# Configurar poetry para no crear un venv
RUN poetry config virtualenvs.create false

WORKDIR /build

# Copiar todos los archivos necesarios para la instalaci贸n
COPY pyproject.toml poetry.lock ./

COPY src/ ./src/


# Instalar dependencias y el proyecto mismo
RUN poetry install --without dev --no-interaction --no-ansi

# Production stage with same pinned base image
FROM python:3.12-slim

# Security-first environment + non-root user
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    APP_HOME=/app \
    APP_USER=appuser

# Create non-root user for security
RUN groupadd -r $APP_USER && useradd -r -g $APP_USER $APP_USER

# Create directory and set ownership
WORKDIR $APP_HOME
RUN chown $APP_USER:$APP_USER $APP_HOME

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copiar dependencias de la etapa de construcci贸n
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages

COPY --from=builder /usr/local/bin /usr/local/bin

# Crear usuario no root
RUN addgroup --system app && adduser --system --group app

# Copiar los archivos de configuraci贸n y scripts necesarios para la ejecuci贸n
COPY alembic.ini /app/alembic.ini
COPY alembic /app/alembic
COPY config /app/config
COPY src /app/src
COPY dashboard /app/dashboard
COPY scripts/start.sh /app/start.sh

# Cambiar propietario
RUN chown -R app:app $APP_HOME

# Cambiar a usuario no root
USER app

# Puerto expuesto
EXPOSE 8000

# Comando de inicio
CMD ["/app/start.sh"]
