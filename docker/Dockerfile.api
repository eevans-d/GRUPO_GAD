# Etapa de construcción
FROM python:3.11-slim as builder

# Variables de entorno
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    POETRY_VERSION=1.5.1

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Instalar Poetry
RUN pip install "poetry==$POETRY_VERSION"

# Configurar poetry para no crear un venv
RUN poetry config virtualenvs.create false

WORKDIR /build

# Copiar todos los archivos necesarios para la instalación
COPY pyproject.toml poetry.lock* ./
COPY src/ ./src/
COPY README.md .

# Instalar dependencias y el proyecto mismo
RUN poetry install --no-dev --no-interaction --no-ansi

# Etapa de producción
FROM python:3.11-slim

# Variables de entorno
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    APP_HOME=/app

# Crear directorio de aplicación
WORKDIR $APP_HOME

# Copiar dependencias de la etapa de construcción
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Crear usuario no root
RUN addgroup --system app && adduser --system --group app

# Copiar los archivos de configuración y scripts necesarios para la ejecución
COPY alembic.ini /app/alembic.ini
COPY alembic /app/alembic
COPY config /app/config
COPY src /app/src
COPY scripts/start.sh /app/start.sh

# Cambiar propietario
RUN chown -R app:app $APP_HOME

# Cambiar a usuario no root
USER app

# Puerto expuesto
EXPOSE 8000

# Comando de inicio
CMD ["/app/start.sh"]