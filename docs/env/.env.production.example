# ------------------------------------------------------------------
# PRODUCTION ENVIRONMENT EXAMPLE (DO NOT COMMIT REAL SECRETS)
# ------------------------------------------------------------------
# Clone to .env.production and replace CHANGEME values safely.
# ------------------------------------------------------------------

# General
ENVIRONMENT=production
LOG_LEVEL=INFO
TZ=UTC

# Database (PostgreSQL + PostGIS via asyncpg)
POSTGRES_USER=gad_user
POSTGRES_PASSWORD=CHANGEME_STRONG_POSTGRES_PASSWORD
POSTGRES_DB=gad_db
POSTGRES_SERVER=db
POSTGRES_PORT=5432
# Application DB URL (preferred in prod)
DATABASE_URL=postgresql+asyncpg://gad_user:CHANGEME_STRONG_POSTGRES_PASSWORD@db:5432/gad_db

# API & Security
# Generate a long random string (>= 48 chars). Example (Linux):
#   head -c 64 /dev/urandom | base64 | tr -d '\n' | cut -c1-64
SECRET_KEY=CHANGEME_RANDOM_48_CHAR_SECRET
ACCESS_TOKEN_EXPIRE_MINUTES=60

# CORS & Proxies
CORS_ALLOWED_ORIGINS=https://app.example.com,https://admin.example.com
CORS_ALLOW_CREDENTIALS=false
TRUSTED_PROXY_HOSTS=caddy,127.0.0.1,localhost

# Redis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=CHANGEME_REDIS_PASSWORD

# Telegram Bot
TELEGRAM_TOKEN=CHANGEME_TELEGRAM_BOT_TOKEN
ADMIN_CHAT_ID=CHANGEME_TELEGRAM_ADMIN_CHAT_ID
# JSON list of allowed user IDs
WHITELIST_IDS=[]

# Notes:
# - Never commit .env.production; manage real secrets via GitHub/infra.
# - Prefer DATABASE_URL over assembling from POSTGRES_* in production.
# - TLS/headers at the reverse proxy (Caddy/Nginx) en producci√≥n.
