
[project]
name = "grupo_gad"
version = "0.1.0"
description = "Sistema de gestiÃ³n administrativa gubernamental"
authors = [{ name = "Equipo GAD", email = "dev@grupogad.com" }]
readme = "README.md"
requires-python = ">=3.12,<4.0"
license = { text = "MIT" }
keywords = ["fastapi", "government", "administration", "gad"]
packages = [{ include = "grupo_gad", from = "src" }]

dependencies = [
	"fastapi>=0.115.0,<1.0.0",
	"sqlalchemy[asyncio]>=2.0.25,<3.0.0",
	"alembic>=1.13.2,<2.0.0",
	"pydantic>=2.8.0,<3.0.0",
	"pydantic-settings>=2.2.1,<3.0.0",
	"uvicorn[standard]>=0.30.0,<1.0.0",
	"python-jose[cryptography]>=3.3.0,<4.0.0",
	"passlib[bcrypt]>=1.7.4,<2.0.0",
	"asyncpg>=0.29.0,<1.0.0",
	"aiosqlite>=0.20.0,<1.0.0",
	"python-dotenv>=1.0.0,<2.0.0",
	"httpx>=0.27.0,<1.0.0",
	"starlette>=0.47.2,<1.0.0",
	"ecdsa>=0.18.0,<1.0.0"
]

[project.optional-dependencies]
dev = [
	"pytest>=8.0.0",
	"pytest-asyncio>=0.23.0",
	"pytest-cov>=4.1.0",
	"ruff>=0.1.0",
	"mypy>=1.8.0",
	"pip-audit>=2.6.0",
	"bandit[toml]>=1.7.5"
]

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 88
select = ["E", "F", "I"]

[tool.mypy]
python_version = "3.12"
strict = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "--cov=src --cov-report=html --cov-report=term-missing --cov-fail-under=85"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pytest-asyncio = "^1.1.0"
pytest-cov = "^7.0.0"
ruff = "^0.12.12"
mypy = "^1.17.1"
pip-audit = "^2.9.0"
bandit = {extras = ["toml"], version = "^1.8.6"}
alembic = "^1.16.5"

